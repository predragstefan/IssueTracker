@model IssueTracker.Models.Problem
@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.Owin
@using System.IdentityModel;
@using System.IdentityModel.Claims;
@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.EntityFramework
@using IssueTracker.Models
@{
    ViewBag.Title = "Edit";
}
@{
    ViewBag.Korisnik = User.Identity.GetUserId();
}
<h2>Izmena</h2>

<div class="col-md-10">
    @using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-group">
        <nav class="navbar navbar-default">
            <div class="container-fluid nav-index">
                <!-- Brand and toggle get grouped for better mobile display -->
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <div class="navbar-brand">@Html.DisplayFor(model => model.Naziv)</div>
                </div>
                <!-- Collect the nav links, forms, and other content for toggling -->
                <div class="collapse navbar-collapse " id="bs-example-navbar-collapse-1">
                    <div class="navbar-form navbar-right">
                        <div class="btn-group" role="group" aria-label="...">
                            @Html.ActionLink("Vratite se", "Index", null, new { @class = "btn btn-default" })
                        </div>
                    </div>
                </div>
            </div>
        </nav>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="well">
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.Naziv, "Naziv:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Naziv, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Naziv, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Opis, "Opis:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.TextAreaFor(model => model.Opis, htmlAttributes: new { @class = "text-area", })
                    @Html.ValidationMessageFor(model => model.Opis, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Status, "Status:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EnumDropDownListFor(x => x.Status, "Status:", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.VrstaProblemaID, "Vrsta problema:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.DropDownList("VrstaProblemaID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.VrstaProblemaID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DodeljenoKorisnikuId, "Dodelite:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.DropDownList("DodeljenoKorisnikuId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DodeljenoKorisnikuId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>


    <nav class="navbar navbar-default">
        <div class="container-fluid nav-index">
            <!-- Brand and toggle get grouped for better mobile display -->
            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
            </div>
            <!-- Collect the nav links, forms, and other content for toggling -->
            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                <div class="navbar-form">
                    <div class="btn-group" role="group" aria-label="...">
                        <input type="submit" value="Save" class="btn btn-success" />
                        @Html.ActionLink("Vratite se", "Index", null, new { @class = "btn btn-default" })
                    </div>
                </div>
            </div>
        </div>
    </nav>

}
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}